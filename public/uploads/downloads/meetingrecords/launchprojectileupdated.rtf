{\rtf1\ansi\ansicpg1252\cocoartf1504\cocoasubrtf840
{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red183\green111\blue179;\red23\green23\blue23;\red202\green202\blue202;
\red67\green192\blue160;\red70\green137\blue204;\red89\green138\blue67;\red140\green211\blue254;\red167\green197\blue152;
\red212\green214\blue154;}
{\*\expandedcolortbl;;\cssrgb\c77255\c52549\c75294;\cssrgb\c11765\c11765\c11765;\cssrgb\c83137\c83137\c83137;
\cssrgb\c30588\c78824\c69020;\cssrgb\c33725\c61176\c83922;\cssrgb\c41569\c60000\c33333;\cssrgb\c61176\c86275\c99608;\cssrgb\c70980\c80784\c65882;
\cssrgb\c86275\c86275\c66667;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\sl360\partightenfactor0

\f0\fs24 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 using\cf4 \strokec4  \cf5 \strokec5 System\cf4 \strokec4 .\cf5 \strokec5 Collections\cf4 \strokec4 ;\cb1 \
\cf2 \cb3 \strokec2 using\cf4 \strokec4  \cf5 \strokec5 System\cf4 \strokec4 .\cf5 \strokec5 Collections\cf4 \strokec4 .\cf5 \strokec5 Generic\cf4 \strokec4 ;\cb1 \
\cf2 \cb3 \strokec2 using\cf4 \strokec4  \cf5 \strokec5 UnityEngine\cf4 \strokec4 ;\cb1 \
\cf2 \cb3 \strokec2 using\cf4 \strokec4  \cf5 \strokec5 UnityEngine\cf4 \strokec4 .\cf5 \strokec5 UI\cf4 \strokec4 ;\cb1 \
\
\
\pard\pardeftab720\sl360\partightenfactor0
\cf6 \cb3 \strokec6 public\cf4 \strokec4  \cf6 \strokec6 class\cf4 \strokec4  \cf5 \strokec5 LaunchProjectile\cf4 \strokec4  : \cf5 \strokec5 MonoBehaviour\cf4 \cb1 \strokec4 \
\pard\pardeftab720\sl360\partightenfactor0
\cf4 \cb3 \{\cb1 \
\cb3    \cf7 \strokec7 // Create bullet and give it a value to be launched\cf4 \cb1 \strokec4 \
\cb3    \cf6 \strokec6 public\cf4 \strokec4  \cf5 \strokec5 GameObject\cf4 \strokec4  \cf8 \strokec8 projectile\cf4 \strokec4 ;\cb1 \
\cb3    \cf6 \strokec6 float\cf4 \strokec4  \cf8 \strokec8 launchVelocity\cf4 \strokec4  = \cf9 \strokec9 1000f\cf4 \strokec4 ;\cb1 \
\cb3    \cf7 \strokec7 // times that the user sets for reloading and unlimited ammo time frame\cf4 \cb1 \strokec4 \
\cb3    [\cf5 \strokec5 SerializeField\cf4 \strokec4 ] \cf6 \strokec6 float\cf4 \strokec4  \cf8 \strokec8 currentTime\cf4 \strokec4 ;\cb1 \
\cb3    \cf6 \strokec6 float\cf4 \strokec4  \cf8 \strokec8 timeRemaining\cf4 \strokec4 ;\cb1 \
\cb3    [\cf5 \strokec5 SerializeField\cf4 \strokec4 ] \cf6 \strokec6 float\cf4 \strokec4  \cf8 \strokec8 unlimitedTime\cf4 \strokec4 ;\cb1 \
\cb3     \cf7 \strokec7 // standard ammo in launcher\cf4 \cb1 \strokec4 \
\cb3    \cf6 \strokec6 float\cf4 \strokec4  \cf8 \strokec8 ammo\cf4 \strokec4  = \cf9 \strokec9 10\cf4 \strokec4 ;\cb1 \
\cb3    \cf7 \strokec7 // give the user a huge amount of ammo so it is basically unlimited\cf4 \cb1 \strokec4 \
\cb3    \cf6 \strokec6 float\cf4 \strokec4  \cf8 \strokec8 ammoU\cf4 \strokec4  = \cf9 \strokec9 1000000\cf4 \strokec4 ;\cb1 \
\
\
\cb3    \cf7 \strokec7 // Call Shoot() so that bullet is created whenever the buttton is pressed\cf4 \cb1 \strokec4 \
\cb3    \cf6 \strokec6 public\cf4 \strokec4  \cf6 \strokec6 void\cf4 \strokec4  \cf10 \strokec10 ShootGun\cf4 \strokec4 ()\cb1 \
\cb3    \{\cb1 \
\cb3       \cf10 \strokec10 Shoot\cf4 \strokec4 ();\cb1 \
\cb3    \}\cb1 \
\
\cb3     \cf7 \strokec7 // Call UnlimitedAmmo() so that bullet is created whenever the buttton is pressed\cf4 \cb1 \strokec4 \
\cb3    \cf6 \strokec6 public\cf4 \strokec4  \cf6 \strokec6 void\cf4 \strokec4  \cf10 \strokec10 unlimited\cf4 \strokec4 ()\cb1 \
\cb3    \{\cb1 \
\cb3       \cf10 \strokec10 UnlimitedAmmo\cf4 \strokec4 ();\cb1 \
\cb3    \}\cb1 \
\
\cb3    \cf6 \strokec6 void\cf4 \strokec4  \cf10 \strokec10 Update\cf4 \strokec4 ()\cb1 \
\cb3    \{\cb1 \
\cb3        \cf7 \strokec7 // when the user runs out of ammo, intiate the reload process\cf4 \cb1 \strokec4 \
\cb3        \cf2 \strokec2 if\cf4 \strokec4  (\cf8 \strokec8 ammo\cf4 \strokec4  == \cf9 \strokec9 0\cf4 \strokec4 )\{\cb1 \
\cb3             \cf2 \strokec2 if\cf4 \strokec4 (\cf8 \strokec8 timeRemaining\cf4 \strokec4  > \cf9 \strokec9 0\cf4 \strokec4 )\{\cb1 \
\cb3                 \cf8 \strokec8 timeRemaining\cf4 \strokec4  -= \cf8 \strokec8 Time\cf4 \strokec4 .\cf8 \strokec8 deltaTime\cf4 \strokec4 ;\cb1 \
\cb3                 \cf10 \strokec10 Reload\cf4 \strokec4 ();\cb1 \
\cb3             \}\cb1 \
\cb3        \}\cb1 \
\cb3        \cf7 \strokec7 // reset the timer when firing so that the user does not have to reload\cf4 \cb1 \strokec4 \
\cb3        \cf2 \strokec2 else\cf4 \strokec4  \cf2 \strokec2 if\cf4 \strokec4 (\cf8 \strokec8 ammo\cf4 \strokec4  == \cf9 \strokec9 10\cf4 \strokec4 )\{\cb1 \
\cb3            \cf8 \strokec8 timeRemaining\cf4 \strokec4  = \cf8 \strokec8 currentTime\cf4 \strokec4 ;\cb1 \
\cb3        \}\cb1 \
\cb3         \cf7 \strokec7 // subtract time from unlimitedTime so that the user does not always \cf4 \cb1 \strokec4 \
\cb3         \cf7 \strokec7 // have unlimited ammo\cf4 \cb1 \strokec4 \
\cb3         \cf2 \strokec2 if\cf4 \strokec4  (\cf8 \strokec8 ammoU\cf4 \strokec4  < \cf9 \strokec9 1000000\cf4 \strokec4 )\{\cb1 \
\cb3             \cf2 \strokec2 if\cf4 \strokec4 (\cf8 \strokec8 unlimitedTime\cf4 \strokec4  > \cf9 \strokec9 0\cf4 \strokec4 )\{\cb1 \
\cb3                     \cf8 \strokec8 unlimitedTime\cf4 \strokec4  -= \cf8 \strokec8 Time\cf4 \strokec4 .\cf8 \strokec8 deltaTime\cf4 \strokec4 ;\cb1 \
\cb3                     \cb1 \
\cb3             \}\cb1 \
\cb3         \}\cb1 \
\cb3         \cf7 \strokec7 // if the user is in the unlimited state, the ammo in the regular launcher\cf4 \cb1 \strokec4 \
\cb3         \cf7 \strokec7 // is always 0\cf4 \cb1 \strokec4 \
\cb3        \cf2 \strokec2 if\cf4 \strokec4 (\cf8 \strokec8 unlimitedTime\cf4 \strokec4  > \cf9 \strokec9 0\cf4 \strokec4  && \cf8 \strokec8 unlimitedTime\cf4 \strokec4  < \cf9 \strokec9 10\cf4 \strokec4  )\cb1 \
\cb3        \{\cb1 \
\cb3            \cf8 \strokec8 ammo\cf4 \strokec4  = \cf9 \strokec9 0\cf4 \strokec4 ;\cb1 \
\cb3        \}\cb1 \
\
\cb3    \}\cb1 \
\
\cb3    \cf6 \strokec6 void\cf4 \strokec4  \cf10 \strokec10 Reload\cf4 \strokec4 ()\{\cb1 \
\cb3        \cf7 \strokec7 // when the reload timer has ran out, give the user full ammo and reset the \cf4 \cb1 \strokec4 \
\cb3        \cf7 \strokec7 // timer that countdowns relaod\cf4 \cb1 \strokec4 \
\cb3        \cf2 \strokec2 if\cf4 \strokec4  (\cf8 \strokec8 timeRemaining\cf4 \strokec4  <= \cf9 \strokec9 0\cf4 \strokec4 )\cb1 \
\cb3         \{\cb1 \
\cb3             \cf8 \strokec8 ammo\cf4 \strokec4  = \cf9 \strokec9 10\cf4 \strokec4 ;\cb1 \
\cb3             \cf8 \strokec8 currentTime\cf4 \strokec4  = \cf9 \strokec9 3f\cf4 \strokec4 ;\cb1 \
\cb3         \}\cb1 \
\cb3         \cb1 \
\cb3    \}\cb1 \
\
\cb3    \cf6 \strokec6 void\cf4 \strokec4  \cf10 \strokec10 Shoot\cf4 \strokec4 ()\cb1 \
\cb3    \{\cb1 \
\cb3         \cf2 \strokec2 if\cf4 \strokec4  (\cf8 \strokec8 ammo\cf4 \strokec4  > \cf9 \strokec9 0\cf4 \strokec4 )\{\cb1 \
\cb3              \cf7 \strokec7 // Created a bullet and launch it with launchVelcoity \cf4 \cb1 \strokec4 \
\cb3             \cf5 \strokec5 GameObject\cf4 \strokec4  \cf8 \strokec8 ball\cf4 \strokec4  = \cf10 \strokec10 Instantiate\cf4 \strokec4 (\cf8 \strokec8 projectile\cf4 \strokec4 , \cf8 \strokec8 transform\cf4 \strokec4 .\cf8 \strokec8 position\cf4 \strokec4 , \cf8 \strokec8 transform\cf4 \strokec4 .\cf8 \strokec8 rotation\cf4 \strokec4 );\cb1 \
\cb3             \cf8 \strokec8 ball\cf4 \strokec4 .\cf10 \strokec10 GetComponent\cf4 \strokec4 <\cf5 \strokec5 Rigidbody\cf4 \strokec4 >().\cf10 \strokec10 AddRelativeForce\cf4 \strokec4 (\cf6 \strokec6 new\cf4 \strokec4  \cf5 \strokec5 Vector3\cf4 \strokec4   (\cf9 \strokec9 0\cf4 \strokec4 ,\cf9 \strokec9 0\cf4 \strokec4 , \cf8 \strokec8 launchVelocity\cf4 \strokec4 ));\cb1 \
\cb3             \cf7 \strokec7 // Subtract 1 from the ammo ammount so there isn't unlimited ammo always\cf4 \cb1 \strokec4 \
\cb3             \cf8 \strokec8 ammo\cf4 \strokec4  -= \cf9 \strokec9 1\cf4 \strokec4 ;\cb1 \
\cb3                 \cb1 \
\cb3         \}\cb1 \
\cb3    \}\cb1 \
\
\cb3    \cf6 \strokec6 void\cf4 \strokec4  \cf10 \strokec10 UnlimitedAmmo\cf4 \strokec4 ()\cb1 \
\cb3    \{\cb1 \
\cb3        \cf2 \strokec2 if\cf4 \strokec4  (\cf8 \strokec8 unlimitedTime\cf4 \strokec4  > \cf9 \strokec9 0\cf4 \strokec4 )\{\cb1 \
\cb3            \cf7 \strokec7 // set ammo of the regular firing to 0 so that the user can not alternate\cf4 \cb1 \strokec4 \
\cb3            \cf7 \strokec7 // between the two buttons for more ammo\cf4 \cb1 \strokec4 \
\cb3            \cf8 \strokec8 ammo\cf4 \strokec4  = \cf9 \strokec9 0\cf4 \strokec4 ;\cb1 \
\cb3             \cf2 \strokec2 if\cf4 \strokec4  (\cf8 \strokec8 ammoU\cf4 \strokec4  > \cf9 \strokec9 10000\cf4 \strokec4 )\{\cb1 \
\cb3                 \cf7 \strokec7 // Created a bullet and launch it with launchVelcoity \cf4 \cb1 \strokec4 \
\cb3                 \cf5 \strokec5 GameObject\cf4 \strokec4  \cf8 \strokec8 ball\cf4 \strokec4  = \cf10 \strokec10 Instantiate\cf4 \strokec4 (\cf8 \strokec8 projectile\cf4 \strokec4 , \cf8 \strokec8 transform\cf4 \strokec4 .\cf8 \strokec8 position\cf4 \strokec4 , \cf8 \strokec8 transform\cf4 \strokec4 .\cf8 \strokec8 rotation\cf4 \strokec4 );\cb1 \
\cb3                 \cf8 \strokec8 ball\cf4 \strokec4 .\cf10 \strokec10 GetComponent\cf4 \strokec4 <\cf5 \strokec5 Rigidbody\cf4 \strokec4 >().\cf10 \strokec10 AddRelativeForce\cf4 \strokec4 (\cf6 \strokec6 new\cf4 \strokec4  \cf5 \strokec5 Vector3\cf4 \strokec4   (\cf9 \strokec9 0\cf4 \strokec4 ,\cf9 \strokec9 0\cf4 \strokec4 , \cf8 \strokec8 launchVelocity\cf4 \strokec4 ));\cb1 \
\cb3                 \cf8 \strokec8 ammoU\cf4 \strokec4  -= \cf9 \strokec9 1\cf4 \strokec4 ;\cb1 \
\cb3             \}\cb1 \
\cb3             \cb1 \
\cb3         \}\cb1 \
\cb3         \cf7 \strokec7 // if the time frame for unlimited time is over, set the ammo for the regular\cf4 \cb1 \strokec4 \
\cb3         \cf7 \strokec7 // firing back to its original value\cf4 \cb1 \strokec4 \
\cb3         \cf2 \strokec2 else\cf4 \strokec4 \{\cb1 \
\cb3             \cf8 \strokec8 ammo\cf4 \strokec4  = \cf9 \strokec9 10\cf4 \strokec4 ;\cb1 \
\cb3         \}\cb1 \
\cb3    \}\cb1 \
\cb3 \}\cb1 \
}